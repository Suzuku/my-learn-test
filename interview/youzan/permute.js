// 问题
// 给定一个不含重复数字的数组 nums ，返回其 所有可能的全排列 。你可以 按任意顺序 返回答案。
// 示例 1：

// 输入：nums = [1,2,3]
// 输出：[[1,2,3],[1,3,2],[2,1,3],[2,3,1],[3,1,2],[3,2,1]]

/**
 * @param {number[]} nums
 * @return {number[][]}
 */








/**
 * ## 问题
 * 给你一个整数数组 nums ，判断这个数组中是否存在长度为 3 的递增子序列。
 * 如果存在这样的三元组下标 (i, j, k) 且满足 i < j < k ，使得 nums[i] < nums[j] < nums[k] ，返回 true ；否则，返回 false 。
 * 
 * 示例：
 * 输入：nums = [1,2,3,4,5]   输出：true
 * 输入：nums = [5,4,3,2,1]   输出：false
 */
/**
 * @param {number[]} nums
 * @return {boolean}
 */



/**
 * 请编写一个函数，可以接受任意数量的数组，返回这些数组的对称差值数组。
 *
 * 对称差：相当于数组的异或运算，表示只属于其中一个集合，而不属于另一个集合的元素组成的集合。
 * 例如集合 { 1, 2, 3 } 和 { 3, 4 } 的对称差为  { 1, 2, 4 }
 *
 * 示例：
 * 输入: [1, 2, 3], [3, 4], [4]
 * 输出: [1, 2]
 */